diff --git a/build_model.py b/build_model.py
index d1950a9..1480a0c 100644
--- a/build_model.py
+++ b/build_model.py
@@ -1,5 +1,6 @@
 from cfg_parse import parse_cfg
-from custom_ops import DeformableConv2d, EmptyLayer
+from custom_ops import EmptyLayer,DeformableConv2d
+import torch
 import torch.nn as nn
 from torchsummary import summary
 
@@ -9,7 +10,7 @@ from torchsummary import summary
 def create_blocks(blocks):
     net_info = blocks[0]
     module_list = nn.ModuleList()
-    prev_filter = 3
+    prev_filter = 2
     output_filter = []
 
     for i, x in enumerate(blocks[1:]):
@@ -29,13 +30,9 @@ def create_blocks(blocks):
             kernel = int(x['size'])
             stride = int(x['stride'])
 
-            if padding:
-                pad = (kernel - 1) // 2
-            else:
-                pad = 0
 
             conv = nn.Conv2d(prev_filter, filters, kernel,
-                             stride, pad, bias=bias)
+                             stride, bias=bias)
             module.add_module("conv_{}".format(i), conv)
 
             if batch_norm:
@@ -88,6 +85,10 @@ def create_blocks(blocks):
             shortcut = EmptyLayer()
             module.add_module("Shortcut_{}".format(i), shortcut)
         
+        elif(x['type'] == 'pooling'):
+            pooling = nn.MaxPool2d(kernel_size=2)
+            module.add_module("Pooling2d_{}".format(i), pooling)
+        
         elif(x['type'] == 'avgpool'):
             pool = nn.AdaptiveAvgPool2d(output_size=(1,1))
             module.add_module("AvgPool{}".format(i),pool)
@@ -98,12 +99,12 @@ def create_blocks(blocks):
     return module_list
 
 
-class Deformed_Darknet53(nn.Module):
+class CNN6(nn.Module):
 
     def __init__(self):
-        super(Deformed_Darknet53, self).__init__()
+        super(CNN6, self).__init__()
 
-        self.model_list = parse_cfg("cfgs/new-darknet.cfg")
+        self.model_list = parse_cfg("cfgs/cnn14.cfg")
         self.module_list = create_blocks(self.model_list)
         #print(self.module_list)
 
diff --git a/cnn6.cfg b/cnn6.cfg
deleted file mode 100644
index deef59d..0000000
--- a/cnn6.cfg
+++ /dev/null
@@ -1,34 +0,0 @@
-[convolutional]
-batch_normalize=1
-filters=64
-size=5
-stride=1
-pad=1
-activation=relu
-
-[convolutional]
-batch_normalize=1
-filters=128
-size=5
-stride=1
-pad=1
-activation=relu
-
-[convolutional]
-batch_normalize=1
-filters=256
-size=5
-stride=1
-pad=1
-activation=relu
-
-[convolutional]
-batch_normalize=1
-filters=512
-size=5
-stride=1
-pad=1
-activation=relu
-
-[avgpool]
-
diff --git a/data.ipynb b/data.ipynb
index 242c2b1..8875b0e 100644
--- a/data.ipynb
+++ b/data.ipynb
@@ -816,6 +816,58 @@
     "aud_df.to_csv('160.csv',index=False)"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 73,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "import torch"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 96,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "s = torch.zeros((2,128,3446),dtype=torch.half)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 98,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "tensor([[[0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         ...,\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.]],\n",
+       "\n",
+       "        [[0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         ...,\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.],\n",
+       "         [0., 0., 0.,  ..., 0., 0., 0.]]], dtype=torch.float16)"
+      ]
+     },
+     "execution_count": 98,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "s"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
diff --git a/preprocess.py b/preprocess.py
index 26003ce..22610c0 100644
--- a/preprocess.py
+++ b/preprocess.py
@@ -64,8 +64,3 @@ class AudioDataset(torch.utils.data.Dataset):
 
         return audio_aug,label
 
-
-dataset = AudioDataset(val_fold=0)
-dataset = DataLoader(dataset,batch_size=16,shuffle=True)
-
-print(next(iter(dataset)))
\ No newline at end of file
